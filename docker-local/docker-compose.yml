version: '2.1'

services:
  jupyterlab:
    image: europe-west1-docker.pkg.dev/spark-optimization/training/jupyterlab
    container_name: jupyterlab
    expose:
      - 4040
      - 4041
      - 8888
    ports:
      - 8888:8888
      - 4040:4040
      - 4041:4041
    volumes:
      - ${SHARED_DIR}:/opt/workspace
  spark-master:
    image: europe-west1-docker.pkg.dev/spark-optimization/training/spark-master
    container_name: spark-master
    expose:
      - 7077
      - 8080
    ports:
      - 8080:8080
      - 7077:7077
    volumes:
      - ${SHARED_DIR}:/opt/workspace
  spark-worker-1:
    image: europe-west1-docker.pkg.dev/spark-optimization/training/spark-worker
    container_name: spark-worker-1
    environment:
      - SPARK_WORKER_CORES=${SPARK_WORKER_CORES:-1}
      - SPARK_WORKER_MEMORY=4g
      - SPARK_DAEMON_JAVA_OPTS='-DXms=4g'
    ports:
      - 8081:8081
    volumes:
      - ${SHARED_DIR}:/opt/workspace
    depends_on:
      - spark-master
  spark-worker-2:
    image: europe-west1-docker.pkg.dev/spark-optimization/training/spark-worker
    container_name: spark-worker-2
    environment:
      - SPARK_WORKER_CORES=${SPARK_WORKER_CORES:-1}
      - SPARK_WORKER_MEMORY=4g
      - SPARK_DAEMON_JAVA_OPTS='-DXms=4g'
    ports:
      - 8082:8081
    volumes:
      - ${SHARED_DIR}:/opt/workspace
    depends_on:
      - spark-master
  spark-history:
    image: europe-west1-docker.pkg.dev/spark-optimization/training/spark-history
    container_name: spark-history
    environment:
      - SPARK_HISTORY_OPTS='-Dspark.history.fs.logDirectory=/opt/workspace/history'
    ports:
      - 18080:18080
    volumes:
      - ${SHARED_DIR}:/opt/workspace
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:18080"]
      interval: 5s
      timeout: 2s
      retries: 5
  sparklint:
    image: roboxue/sparklint
    command: --historyServer http://spark-history:18080
    container_name: sparklint
    ports:
      - 23763:23763
    volumes:
      - ${SHARED_DIR}:/opt/workspace
    depends_on:
      spark-history:
        condition: service_healthy
